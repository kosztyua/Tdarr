name: build_multi

on: workflow_dispatch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_multi_node:
    runs-on: ubuntu-20.04
    name: build_multi_node
    steps:
      - name: Define Build Date
        id: build_date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}    

      - name: Create Variables
        id: vars
        run: |
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=username::$(echo ${GITHUB_REPOSITORY%/*} | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=repo::$(echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]')"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image (Base)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/base:${{ github.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/base:latest
          platforms: linux/amd64
          file: docker/Dockerfile.base    
