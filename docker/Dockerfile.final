# Use the base image with the specified BASE_TAG
ARG BASE_TAG
FROM ghcr.io/kosztyua/tdarr/base:785849bffafbbd69486ba1f6219e06236bf40c46

# Environment setup
ENV WEB_UI_PORT="8265" \
    SERVER_PORT="8266" \
    NODE_PORT="8267" \
    PUID="1000" \
    PGID="1000" \
    UMASK="002" \
    TZ="Etc/UTC" \
    HOME="/home/Tdarr" \
    VERSIONS_JSON_URL="https://f000.backblazeb2.com/file/tdarrs/versions.json"

# Install required packages
RUN apt-get update && apt-get install -y curl jq unzip mkvtoolnix libtesseract-dev && \
    rm -rf /var/lib/apt/lists/*

# Set the VERSION and MODULE arguments
ARG VERSION
ARG MODULE

# If VERSION is not provided, fetch the latest version from versions.json
# Then, based on the MODULE and VERSION, construct the download URL and proceed to download and unpack
RUN if [ -z "$VERSION" ]; then \
        VERSION=$(curl --silent "$VERSIONS_JSON_URL" | jq -r 'keys | sort_by(split(".") | map(tonumber)) | .[-1]'); \
    fi; \
    if [ "$MODULE" = "Tdarr_Full" ]; then \
        for MOD in Tdarr_Node Tdarr_Server; do \
            MODULE_URL=$(curl --silent "$VERSIONS_JSON_URL" | jq -r --arg ver "$VERSION" --arg mod "$MOD" '.[$ver].linux_x64[$mod]'); \
            echo "Downloading $MOD version $VERSION from $MODULE_URL"; \
            curl --connect-timeout 120 --retry 5 -o /tmp/$MOD.zip -L "$MODULE_URL"; \
            unzip -q /tmp/$MOD.zip -d /app/$MOD; \
            rm /tmp/$MOD.zip; \
        done; \
    else \
        MODULE_URL=$(curl --silent "$VERSIONS_JSON_URL" | jq -r --arg ver "$VERSION" --arg mod "$MODULE" '.[$ver].linux_x64[$mod]'); \
        echo "Downloading $MODULE version $VERSION from $MODULE_URL"; \
        curl --connect-timeout 120 --retry 5 -o /tmp/$MODULE.zip -L "$MODULE_URL"; \
        unzip -q /tmp/$MODULE.zip -d /app/$MODULE; \
        rm /tmp/$MODULE.zip; \
    fi
# Remove unnecessary files, setup permissions, and cleanup
RUN apt-get purge -y --auto-remove curl jq unzip && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    chmod -R 755 /app/$MODULE

# Expose necessary ports
EXPOSE $NODE_PORT $WEB_UI_PORT $SERVER_PORT

# Set the entrypoint
ENTRYPOINT ["/init"]
